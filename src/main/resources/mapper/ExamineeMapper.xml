<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="just.yt.dao.ExamineeMapper" >
  <resultMap id="BaseResultMap" type="just.yt.model.Examinee" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="GMT_CREATE" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="GMT_MODIFIED" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="IDENTITY" property="identity" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="POSITION" property="position" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, GMT_CREATE, GMT_MODIFIED, IDENTITY, NAME, POSITION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="just.yt.model.ExamineeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examinee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize >= 0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from examinee
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from examinee
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="just.yt.model.ExamineeExample" >
    delete from examinee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="just.yt.model.Examinee" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into examinee (GMT_CREATE, GMT_MODIFIED, IDENTITY, 
      NAME, POSITION)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{identity,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="just.yt.model.Examinee" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into examinee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        GMT_CREATE,
      </if>
      <if test="gmtModified != null" >
        GMT_MODIFIED,
      </if>
      <if test="identity != null" >
        IDENTITY,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="position != null" >
        POSITION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="just.yt.model.ExamineeExample" resultType="java.lang.Integer" >
    select count(*) from examinee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update examinee
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null" >
        GMT_CREATE = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        GMT_MODIFIED = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.identity != null" >
        IDENTITY = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        POSITION = #{record.position,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update examinee
    set ID = #{record.id,jdbcType=BIGINT},
      GMT_CREATE = #{record.gmtCreate,jdbcType=TIMESTAMP},
      GMT_MODIFIED = #{record.gmtModified,jdbcType=TIMESTAMP},
      IDENTITY = #{record.identity,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="just.yt.model.Examinee" >
    update examinee
    <set >
      <if test="gmtCreate != null" >
        GMT_CREATE = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        GMT_MODIFIED = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="identity != null" >
        IDENTITY = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        POSITION = #{position,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="just.yt.model.Examinee" >
    update examinee
    set GMT_CREATE = #{gmtCreate,jdbcType=TIMESTAMP},
      GMT_MODIFIED = #{gmtModified,jdbcType=TIMESTAMP},
      IDENTITY = #{identity,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      POSITION = #{position,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>