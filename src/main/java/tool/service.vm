package just.yt.service;

import just.yt.dao.T${modelUp}Mapper;
import just.yt.model.T${modelUp};
import just.yt.model.T${modelUp}Example;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.List;


@Service("${modelLow}Service")
public class ${modelUp}Service {

    @Resource
    ${modelUp}Mapper ${modelLow}Mapper;


    public ${modelUp} insert(${modelUp} ${modelLow}){
        ${modelUp}Mapper.insertSelective(${modelLow});
        return ${modelLow};
    }

    public List<${modelUp}> getAll(){
        return ${modelLow}Mapper.selectByExample(new ${modelUp}Example());
    }

    public ${modelUp} update(${modelUp} ${modelLow}){
        ${modelUp}Example ${modelUp}Example=new ${modelUp}Example();
        ${modelUp}Example.createCriteria().andIdEqualTo(${modelLow}.getId());
        ${modelUp}Mapper.updateByExampleSelective(${modelLow},${modelUp}Example);
        return ${modelLow};
    }

    public boolean delete(Long id){
        return ${modelLow}Mapper.deleteByPrimaryKey(id) > 0;
    }

    public void save(T${modelUp} ${modelLow}){
        t${modelUp}Mapper.insert(${modelLow});
    }

    public Integer count(){
        return ${modelLow}Mapper.countByExample(new ${modelUp}Example());
    }

    public List<${modelUp}> getByPage(int pageSize,int pageNo){
        ${modelUp}Example ${modelUp}Example=new ${modelUp}Example();
        ${modelUp}Example.setLimitStart((pageNo - 1) * pageSize);
        ${modelUp}Example.setLimitSize(pageSize);
        return ${modelLow}Mapper.selectByExample(${modelUp}Example);
        }

        public ${modelUp} getById(Long id){
        return ${modelLow}Mapper.selectByPrimaryKey(id);
        }
}