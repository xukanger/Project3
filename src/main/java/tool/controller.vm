package just.yt.controller;

import just.yt.controller.vo.Page;
import just.yt.model.T${modelUp};
import just.yt.service.${modelUp}Service;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.List;

/**
* Created by yt on 2016/12/13.
*/
@Controller
@RequestMapping("/${modelLow}")
public class ${modelUp}Controller {

        @Resource
        private ${modelUp}Service ${modelLow}Service;


        @RequestMapping(value="/getAll",method= RequestMethod.GET)
        public @ResponseBody List<T${modelUp}> getAll() {
            List<T${modelUp}> ${modelLow}s = this.${modelLow}Service.getAll();
                return ${modelLow}s;
        }

        @RequestMapping(value="/delete/{id}", method=RequestMethod.POST)
        public @ResponseBody String delete(@PathVariable Integer id) {
                ${modelLow}Service.delete(id);
                return null;
        }

        @RequestMapping(value="/update", method=RequestMethod.POST)
        public @ResponseBody String update(@RequestBody T${modelUp} t${modelLow}) {
                ${modelLow}Service.update(t${modelLow});
                return null;
        }

        @RequestMapping(value="/save", method=RequestMethod.POST)
        public @ResponseBody String save(@RequestBody T${modelUp} t${modelLow}) {
                ${modelLow}Service.save(t${modelLow});
                return null;
        }

        @RequestMapping(value="/count", method=RequestMethod.POST)
                public @ResponseBody Integer count() {
                return ${modelLow}Service.count();
        }

        @RequestMapping(value="/{id}",method= RequestMethod.GET)
        public @ResponseBody T${modelUp} getById(@PathVariable Integer id) {
                return this.${modelLow}Service.getById(id);
        }

        @RequestMapping(value="/getByPage",method= RequestMethod.GET)
        public @ResponseBody List<T${modelUp}> getByPage(@RequestBody Page page) {
            List<T${modelUp}> ${modelLow}s = this.${modelLow}Service.getByPage(page.getPageSize(),page.getPageNo());
                return ${modelLow}s;
        }
}